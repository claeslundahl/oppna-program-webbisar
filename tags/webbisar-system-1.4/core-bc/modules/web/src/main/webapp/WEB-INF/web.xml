<?xml version='1.0' encoding='UTF-8'?>
<!--

    Copyright 2010 Västra Götalandsregionen

      This library is free software; you can redistribute it and/or modify
      it under the terms of version 2.1 of the GNU Lesser General Public
      License as published by the Free Software Foundation.

      This library is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU Lesser General Public License for more details.

      You should have received a copy of the GNU Lesser General Public
      License along with this library; if not, write to the
      Free Software Foundation, Inc., 59 Temple Place, Suite 330,
      Boston, MA 02111-1307  USA


-->

<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" version="2.4">

  <description>Webbisar Application</description>
  <display-name>Webbisar</display-name>

  <!-- resolving .xhmtl files for Facelets -->
  <context-param>
    <param-name>facelets.RESOURCE_RESOLVER</param-name>
    <param-value>
      se.vgr.javg.util.webcomponent.support.FaceletsClasspathResourceResolver
    </param-value>
  </context-param>
  <!-- Use specific service-config xml file for the running project -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:/services-config.xml</param-value>
  </context-param>

  <!-- jboss el expressions allow method params -->
  <context-param>
    <param-name>com.sun.faces.expressionFactory</param-name>
    <param-value>org.jboss.el.ExpressionFactoryImpl</param-value>
  </context-param>

  <context-param>
    <param-name>facelets.REFRESH_PERIOD</param-name>
    <param-value>2</param-value>
  </context-param>

  <context-param>
    <param-name>facelets.DEVELOPMENT</param-name>
    <param-value>true</param-value>
  </context-param>

  <context-param>
    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
    <param-value>server</param-value>
    <!--
      <param-value>client</param-value>
    -->
  </context-param>

  <context-param>
    <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
    <param-value>.xhtml</param-value>
  </context-param>

  <context-param>
    <param-name>com.sun.faces.validateXml</param-name>
    <param-value>true</param-value>
  </context-param>

  <context-param>
    <param-name>com.sun.faces.verifyObjects</param-name>
    <param-value>true</param-value>
  </context-param>

  <!-- Guarantees that under all JSF exit conditions, the flow context will be cleaned up
  <filter>
    <filter-name>Flow System Cleanup Filter</filter-name>
    <filter-class>org.springframework.webflow.executor.jsf.FlowSystemCleanupFilter</filter-class>
  </filter>
   -->

  <!-- Filters all request to *.faces to the Flow System Cleanup Filter for guarenteed cleanup
  <filter-mapping>
    <filter-name>Flow System Cleanup Filter</filter-name>
    <url-pattern>*.jsf</url-pattern>
  </filter-mapping>
   -->

  <filter>
    <display-name>P3PFilter</display-name>
    <filter-name>P3PFilter</filter-name>
    <filter-class>se.vgregion.webbisar.web.P3PFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>P3PFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>false</param-value>
    </init-param>
  </filter>
  
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- Bootstraps the root Spring Web Application Context, responsible for deploying managed beans
    defined in the configuration files above.  These beans represent the services used by the JSF application. -->

  <listener>
    <listener-class>
      org.springframework.web.context.ContextLoaderListener
    </listener-class>
  </listener>

  <!-- Used to be able to specify session arguments in services-config.xml -->
  <listener>
    <listener-class>
      org.springframework.web.context.request.RequestContextListener
    </listener-class>
  </listener>

  <listener>
    <listener-class>se.vgregion.webbisar.web.FtpServerListener</listener-class>
  </listener>

  <servlet>
    <servlet-name>JAVG Classpath Servlet</servlet-name>
    <servlet-class>
      se.vgr.javg.util.webcomponent.support.ClasspathResourceLoadingServlet
    </servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!-- Map all url:s beginning with "resource" to /resources/* for loading from web composite jars
    on the classpath rather than the web-inf directory -->
  <servlet-mapping>
    <servlet-name>JAVG Classpath Servlet</servlet-name>
    <url-pattern>/resources/*</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!-- Map all requests to *.jsf to the Faces Servlet for handling -->
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.jsf</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/webflow-config.xml classpath*:/webflow-config.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
    <url-pattern>*.flow</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
    <url-pattern>*.servlet</url-pattern>
  </servlet-mapping>
  
  <!--
    spring remoting - this is used for communication with the portlet. It is configured via the spring config file
    remoting-servlet.xml in WEB-INF
  -->
  <servlet>
    <servlet-name>remoting</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>remoting</servlet-name>
    <url-pattern>/remoting/*</url-pattern>
  </servlet-mapping>
  <!-- end spring remoting -->
  
  <servlet>
    <servlet-name>MediaServingServlet</servlet-name>
    <servlet-class>se.vgregion.webbisar.web.MediaServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>MediaServingServlet</servlet-name>
    <url-pattern>/media/*</url-pattern>
  </servlet-mapping>

  <!-- Error servlet -->
  <servlet>
    <display-name>ErrorServlet</display-name>
    <servlet-name>ErrorServlet</servlet-name>
    <servlet-class>se.vgregion.webbisar.web.ErrorServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ErrorServlet</servlet-name>
    <url-pattern>/internalerror/*</url-pattern>
  </servlet-mapping>

  <!-- Widget servlet -->
  <servlet>
    <servlet-name>widget</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>widget</servlet-name>
    <url-pattern>/widget.jsonp</url-pattern>
  </servlet-mapping>
  
  <!-- Servlet serving standard sitemap -->
  <servlet>
    <servlet-name>sitemap</servlet-name>
    <servlet-class>se.vgregion.sitemap.servlet.DefaultSitemapServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>sitemap</servlet-name>
    <url-pattern>/sitemap</url-pattern>
  </servlet-mapping>
  
  <!-- Servlet serving internal sitemap (with extra, non standard, webbis info elements) -->
  <servlet>
    <servlet-name>internalsitemap</servlet-name>
    <servlet-class>se.vgregion.webbisar.web.WebbisExtraInfoSitemapServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>internalsitemap</servlet-name>
    <url-pattern>/internalsitemap</url-pattern>
  </servlet-mapping>

  <error-page>
    <exception-type>javax.servlet.ServletException</exception-type>
    <location>/error.jsf</location>
  </error-page>
  
  <error-page>
    <exception-type>org.springframework.webflow.execution.repository.support.InvalidContinuationIdException</exception-type>
    <location>/error.jsf</location>
  </error-page>

  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
</web-app>